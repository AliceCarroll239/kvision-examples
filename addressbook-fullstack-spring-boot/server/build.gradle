apply plugin: 'java'
apply plugin: 'kotlin-platform-jvm'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = javaVersion

dependencies {
    expectedBy project(':common')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "pl.treksoft:kvision-server-spring-boot:${kvisionVersion}"
    compile "org.springframework.boot:spring-boot-starter"
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-jdbc"
    compile "org.pac4j:spring-webmvc-pac4j:$springMvcPac4jVersion"
    compile "org.pac4j:pac4j-http:${pac4jVersion}"
    compile "org.pac4j:pac4j-sql:${pac4jVersion}"
    compile "org.springframework.security:spring-security-crypto:${springSecurityCryptoVersion}"
    compile "commons-logging:commons-logging:${commonsLoggingVersion}"
    compile "com.h2database:h2:${h2Version}"
    compile "org.postgresql:postgresql:${pgsqlVersion}"
    compile "com.github.andrewoma.kwery:core:${kweryVersion}"
    compile "com.github.andrewoma.kwery:mapper:${kweryVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

compileKotlin {
    targetCompatibility = javaVersion
    sourceCompatibility = javaVersion
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}

bootJar {
    from("../client/build/distributions/client") {
        into 'public'
    }
}
